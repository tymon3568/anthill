name: Export OpenAPI Specifications

on:
  push:
    branches: [master, main, develop]
    paths:
      - 'services/**'
      - '.github/workflows/openapi-export.yml'
  pull_request:
    paths:
      - 'services/**'

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: stable

jobs:
  # Build and export specs for each service
  export-user-service:
    name: Export User Service Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "services/user_service"

      - name: Build and Export Spec
        run: |
          cd services/user_service
          cargo build --release --features export-spec

      - name: Upload Spec Artifact
        uses: actions/upload-artifact@v4
        with:
          name: user-spec
          path: shared/openapi/user.yaml
          retention-days: 1

  export-inventory-service:
    name: Export Inventory Service Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "services/inventory_service"

      - name: Build and Export Spec
        run: |
          cd services/inventory_service
          cargo build --release --features export-spec

      - name: Upload Spec Artifact
        uses: actions/upload-artifact@v4
        with:
          name: inventory-spec
          path: shared/openapi/inventory.yaml
          retention-days: 1
          if-no-files-found: ignore

  export-order-service:
    name: Export Order Service Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "services/order_service"

      - name: Build and Export Spec
        run: |
          cd services/order_service
          cargo build --release --features export-spec

      - name: Upload Spec Artifact
        uses: actions/upload-artifact@v4
        with:
          name: order-spec
          path: shared/openapi/order.yaml
          retention-days: 1
          if-no-files-found: ignore

  export-payment-service:
    name: Export Payment Service Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "services/payment_service"

      - name: Build and Export Spec
        run: |
          cd services/payment_service
          cargo build --release --features export-spec

      - name: Upload Spec Artifact
        uses: actions/upload-artifact@v4
        with:
          name: payment-spec
          path: shared/openapi/payment.yaml
          retention-days: 1
          if-no-files-found: ignore

  export-integration-service:
    name: Export Integration Service Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "services/integration_service"

      - name: Build and Export Spec
        run: |
          cd services/integration_service
          cargo build --release --features export-spec

      - name: Upload Spec Artifact
        uses: actions/upload-artifact@v4
        with:
          name: integration-spec
          path: shared/openapi/integration.yaml
          retention-days: 1
          if-no-files-found: ignore

  # Merge all specs into single api.yaml
  merge-specs:
    name: Merge OpenAPI Specs
    needs:
      - export-user-service
      - export-inventory-service
      - export-order-service
      - export-payment-service
      - export-integration-service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Redocly CLI
        run: npm install -g @redocly/cli

      - name: Merge Specs
        run: |
          # Copy all specs to shared/openapi
          mkdir -p shared/openapi
          find artifacts -name "*.yaml" -exec cp {} shared/openapi/ \;

          # List available specs
          echo "📄 Available specs:"
          ls -lh shared/openapi/*.yaml || echo "No specs found"

          # Merge specs using redocly (if multiple specs exist)
          if [ $(ls shared/openapi/*.yaml 2>/dev/null | wc -l) -gt 1 ]; then
            echo "🔀 Merging multiple specs..."
            redocly bundle shared/openapi/user.yaml \
              shared/openapi/inventory.yaml \
              shared/openapi/order.yaml \
              shared/openapi/payment.yaml \
              shared/openapi/integration.yaml \
              --output shared/openapi/api.yaml \
              --ext yaml || {
                echo "⚠️  Merge failed, using user.yaml as api.yaml"
                cp shared/openapi/user.yaml shared/openapi/api.yaml
              }
          else
            echo "📋 Single spec found, copying as api.yaml"
            cp shared/openapi/user.yaml shared/openapi/api.yaml
          fi

          echo "✅ Final api.yaml size: $(du -h shared/openapi/api.yaml | cut -f1)"

      - name: Commit and Push Changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add shared/openapi/*.yaml

          # Only commit if there are changes
          if git diff --cached --quiet; then
            echo "✅ No changes to commit"
          else
            git commit -m "chore: update OpenAPI specifications [skip ci]

            Auto-generated from services:
            $(find shared/openapi -name '*.yaml' -not -name 'README.md' -exec basename {} \; | sed 's/^/- /')"

            git push
          fi

      - name: Upload Merged Spec
        uses: actions/upload-artifact@v4
        with:
          name: merged-api-spec
          path: shared/openapi/api.yaml
          retention-days: 30

      - name: Comment PR with Spec Info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const specs = fs.readdirSync('shared/openapi')
              .filter(f => f.endsWith('.yaml'))
              .map(f => `- \`${f}\` (${fs.statSync(\`shared/openapi/\${f}\`).size} bytes)`)
              .join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📄 OpenAPI Specifications Updated\n\n${specs}\n\n✅ Merged spec available as artifact \`merged-api-spec\``
            });
