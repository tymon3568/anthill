version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d inventory_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.10-alpine
    container_name: nats_server
    command: "-js"
    ports:
      - "4222:4222" # Client port
      - "8222:8222" # HTTP monitoring port
    healthcheck:
      test: ["CMD-SHELL", "lsof -i :4222 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio_storage
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION_NAME: us-east-1
    ports:
      - "9000:9000" # MinIO API port
      - "9001:9001" # MinIO Console port
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
  minio-init:
    image: minio/mc:latest
    container_name: minio_init
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./infra/init-minio.sh:/init-minio.sh:ro
    command: sh /init-minio.sh
    environment:
      - MC_HOST_local=http://minioadmin:minioadmin@minio:9000

volumes:
  postgres_data:
  redis_data:
  minio_data:
