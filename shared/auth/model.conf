# Casbin Multi-Tenant RBAC Model
# This model supports:
# - Multi-tenant isolation via domain (tenant_id)
# - Role-Based Access Control (RBAC)
# - Resource-based permissions

[request_definition]
r = sub, dom, obj, act

[policy_definition]
p = sub, dom, obj, act

[role_definition]
g = _, _, _

[policy_effect]
e = some(where (p.eft == allow))

[matchers]
m = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act

# Explanation:
# - sub: subject (user_id or role name like "admin", "manager", "user")
# - dom: domain (tenant_id for multi-tenant isolation)
# - obj: object/resource (e.g., "/api/v1/products", "/api/v1/orders")
# - act: action (HTTP method: GET, POST, PUT, DELETE, or custom: read, write)
#
# The matcher ensures:
# 1. g(r.sub, p.sub, r.dom): Check if request subject has the role in policy (supports role hierarchy)
# 2. r.dom == p.dom: Ensure request and policy are in same tenant (multi-tenant isolation)
# 3. r.obj == p.obj: Resource matches
# 4. r.act == p.act: Action matches
#
# Example policies:
# p, admin, tenant-123, /api/v1/products, GET     -> Admin role can GET products in tenant-123
# g, user-456, admin, tenant-123                   -> User 456 has admin role in tenant-123
